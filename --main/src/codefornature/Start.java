/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package codefornature;

import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.Scanner;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author ACER
 */
public class Start extends javax.swing.JFrame {
    private final Trivia TriviaFrameReference;
    private int points;
    private String username;
    private String regDate;
    private ArrayList<String> questions = new ArrayList<>();;
    private ArrayList<ArrayList<String>> choices = new ArrayList<>();
    private ArrayList<String> answers= new ArrayList<>();
    private int attempt;
    private boolean correct=false; 
    private int day;
    private int question;
    
    /**
     * Creates new form Trivia
     */
    public Start(Trivia TriviaFrame,int points,String username,String regDate,int day) {
        initComponents();
        this.TriviaFrameReference=TriviaFrame;
        this.points=points;
        this.username=username;
        this.regDate=regDate;
        this.day=day;
        fDay.setText(Integer.toString(day));
        readFile();
        displayTrivia(day);
        fOptionA.addActionListener(e -> {       // Associate button A with choice A
            count(day);
            checkAnswer(day, 0);
        }); 
        fOptionB.addActionListener(e -> {       // Associate button B with choice B
            count(day);
            checkAnswer(day, 1);
        }); 
        fOptionC.addActionListener(e -> {       // Associate button C with choice C
            count(day);
            checkAnswer(day, 2);
        }); 
        fOptionD.addActionListener(e -> {       // Associate button D with choice D
            count(day);
            checkAnswer(day, 3);
        }); 
    }
    public Start(Trivia TriviaFrame,int question){
        this.TriviaFrameReference=TriviaFrame;
        this.question=question;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        fQuestion = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fDay = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fAttempt = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        fOptionA = new javax.swing.JButton();
        fOptionB = new javax.swing.JButton();
        fOptionC = new javax.swing.JButton();
        fOptionD = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(986, 750));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backBtn.setBackground(new java.awt.Color(0, 102, 102));
        backBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\SCSM11\\Downloads\\back.jpg")); // NOI18N
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 100));

        jLabel9.setFont(new java.awt.Font("Showcard Gothic", 1, 60)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("START");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, -1, -1));

        fQuestion.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        fQuestion.setForeground(new java.awt.Color(0, 102, 102));
        fQuestion.setText("question");
        fQuestion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 102), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 102, 102)));
        getContentPane().add(fQuestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 959, 190));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Day ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        fDay.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        fDay.setForeground(new java.awt.Color(0, 102, 102));
        fDay.setText("Day ");
        getContentPane().add(fDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Trivia(Attempt  #");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, -1));

        fAttempt.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        fAttempt.setForeground(new java.awt.Color(0, 102, 102));
        fAttempt.setText(".");
        getContentPane().add(fAttempt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText(")");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, -1, -1));

        fOptionA.setBackground(new java.awt.Color(204, 255, 204));
        fOptionA.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        fOptionA.setForeground(new java.awt.Color(51, 51, 51));
        fOptionA.setText("jButton2");
        getContentPane().add(fOptionA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 440, 103));

        fOptionB.setBackground(new java.awt.Color(204, 255, 204));
        fOptionB.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        fOptionB.setForeground(new java.awt.Color(51, 51, 51));
        fOptionB.setText("jButton2");
        getContentPane().add(fOptionB, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, 440, 103));

        fOptionC.setBackground(new java.awt.Color(204, 255, 204));
        fOptionC.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        fOptionC.setForeground(new java.awt.Color(51, 51, 51));
        fOptionC.setText("jButton2");
        getContentPane().add(fOptionC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, 440, 103));

        fOptionD.setBackground(new java.awt.Color(204, 255, 204));
        fOptionD.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        fOptionD.setForeground(new java.awt.Color(51, 51, 51));
        fOptionD.setText("jButton2");
        getContentPane().add(fOptionD, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 580, 440, 103));

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\SCSM11\\Downloads\\trivia bg.jpg")); // NOI18N
        jLabel8.setMaximumSize(new java.awt.Dimension(1200, 944));
        jLabel8.setMinimumSize(new java.awt.Dimension(1200, 944));
        jLabel8.setPreferredSize(new java.awt.Dimension(1200, 944));
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void readFile(){
        try{
            Scanner in = new Scanner(new FileInputStream("TriviaSample.txt"));
            while(in.hasNextLine()){
                questions.add(in.nextLine());
                ArrayList<String> choiceList = new ArrayList<>(Arrays.asList(in.nextLine().split(",")));
                choices.add(choiceList);
                answers.add(in.nextLine());
                if (in.hasNextLine()) {
                    in.nextLine();
                }
            }
        } 
        catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }
    
    public void displayTrivia(int day){
        fQuestion.setText("<html><div style='width:730px;'>"+questions.get(day-1)+"</div></html>");
        fOptionA.setText("A. "+choices.get(day-1).get(0));
        fOptionB.setText("B. "+choices.get(day-1).get(1));
        fOptionC.setText("C. "+choices.get(day-1).get(2));
        fOptionD.setText("D. "+choices.get(day-1).get(3));
        count(day);
    }
    
    public ArrayList<String> getData(){
        ArrayList<String> data=new ArrayList<>();
        readFile();
        data.add(questions.get(question-1));
        data.addAll(choices.get(question-1));
        data.add(answers.get(question-1));
        return data;
    }
    
    public void count(int day){
        String SUrl,SUser,SPass,query;
        SUrl="jdbc:mysql://localhost:3306/user";
        SUser="root";
        SPass="";
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(SUrl,SUser,SPass);
            Statement st=con.createStatement();
            query="SELECT * FROM attempt WHERE username='"+username+"' AND day='"+day+"'"; 
            ResultSet rs=st.executeQuery(query);
            if (rs.next()) {
                attempt=rs.getInt("attempt");
            }
            else{
                attempt=0;
            } 
        fAttempt.setText(Integer.toString(attempt+1));
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
     public void checkAnswer(int day, int index) {
        String SUrl,SUser,SPass,query;
        SUrl="jdbc:mysql://localhost:3306/user";
        SUser="root";
        SPass="";
        int correctAnswerIndex = choices.get(day - 1).indexOf(answers.get(day - 1));
        boolean found = false;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(SUrl,SUser,SPass);
            Statement st=con.createStatement();
            // Check if attempt exists for the username and day
            query="SELECT * FROM attempt WHERE username='"+username+"' AND day='"+day+"'"; 
            ResultSet rs=st.executeQuery(query);
            while (rs.next()) {
                attempt = rs.getInt("attempt");
                found = true;
            }
            if (!found) {
                attempt=1;
                query="INSERT INTO attempt(username,day,attempt,correct)"+"VALUES('"+username+"','"+day+"','"+attempt+"','"+correct+"')";
                st.execute(query);
            } 
            else {
                attempt++;
                query = "UPDATE attempt SET attempt = " + attempt + " WHERE username = '" + username + "' AND day='"+day+"'";
                st.executeUpdate(query);
            }
            if (attempt == 1 ) {
                if(index == correctAnswerIndex){
                    correct=true;
                    query = "UPDATE attempt SET correct = '" + correct + "' WHERE username = '" + username + "' AND day='"+day+"'";
                    st.executeUpdate(query);
                    points+=2;
                    updatePoints(points);
                    showMessageDialog(null,"Congratulations! You answered it correctly.You have been awarded 2 points,you now have "+points+" points.");  
                    shuffleOptions(day);
                } 
                else{
                    JOptionPane.showMessageDialog(new JFrame(),"Whoops, that doesn’t look right, try again!","Error",JOptionPane.ERROR_MESSAGE);
                    shuffleOptions(day); // Shuffle options for the given day
                }
            }
            else if (attempt == 2) {
                if(correct){
                    if(index == correctAnswerIndex){
                        showMessageDialog(null,"Congratulations! You answered it correctly.No points given");  
                        shuffleOptions(day);
                    }
                    else{
                        JOptionPane.showMessageDialog(new JFrame(),"Your answer is still incorrect, the correct answer is: " +answers.get(day-1),"Error",JOptionPane.ERROR_MESSAGE); 
                        shuffleOptions(day);
                    }
                }
                if(!correct){
                    if(index == correctAnswerIndex){
                    correct=true;
                    query = "UPDATE attempt SET correct = '" + correct + "' WHERE username = '" + username + "' AND day='"+day+"'";
                    st.executeUpdate(query);
                    points+=1;
                    updatePoints(points);
                    showMessageDialog(null,"Congratulations! You answered it correctly.You have been awarded 1 points,you now have "+points+" points.");  
                    shuffleOptions(day);
                    }
                    else{
                        JOptionPane.showMessageDialog(new JFrame(),"Your answer is still incorrect, the correct answer is: " +answers.get(day-1),"Error",JOptionPane.ERROR_MESSAGE); 
                        shuffleOptions(day);
                    }
                } 
                
            }
            else{
                if(index == correctAnswerIndex){
                    showMessageDialog(null,"Congratulations! You answered it correctly.No points given");  
                    shuffleOptions(day);
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(),"Your answer is still incorrect, the correct answer is: " +answers.get(day-1),"Error",JOptionPane.ERROR_MESSAGE); 
                    shuffleOptions(day);
                }
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
     }
     
     public void updatePoints(int points){
         String SUrl,SUser,SPass,query;
            SUrl="jdbc:mysql://localhost:3306/user";
            SUser="root";
            SPass="";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection(SUrl,SUser,SPass);
                Statement st=con.createStatement();
                query = "UPDATE user SET points = " + points + " WHERE username = '" + username + "'";
                st.executeUpdate(query);
                TriviaFrameReference.updatePoints(points);
            }
            catch(Exception e){
            }
     }
     
     public void shuffleOptions(int day) {
        int correctAnswerIndex = choices.get(day - 1).indexOf(answers.get(day - 1));
        ArrayList<String> options = choices.get(day - 1);
        String correctAnswer = options.get(correctAnswerIndex);
        // Remove correct answer from options
        options.remove(correctAnswer);
        // Shuffle remaining options
        Collections.shuffle(options);
        // Insert correct answer at random position
        int randomIndex = new Random().nextInt(options.size() + 1);
        options.add(randomIndex, correctAnswer);
        // Update choices list for the given day
        choices.set(day - 1, options);
        displayTrivia(day);
    }
     
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        this.TriviaFrameReference.setVisible(true);
        TriviaFrameReference.pack();
        TriviaFrameReference.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel fAttempt;
    private javax.swing.JLabel fDay;
    private javax.swing.JButton fOptionA;
    private javax.swing.JButton fOptionB;
    private javax.swing.JButton fOptionC;
    private javax.swing.JButton fOptionD;
    private javax.swing.JLabel fQuestion;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
   
